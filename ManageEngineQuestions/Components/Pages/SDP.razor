@page "/sdp"
@rendermode InteractiveServer
@inject HttpClient Http
@inject NavigationManager NavigationManager

<Back />
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="col">
                <p class="text-center">Choose ServiceDesk Hosting Model</p>
                <div class="d-flex justify-content-center align-items-center">
                    <select @bind="Option" class="form-select me2">
                        <option value="On-Prem">On-Prem</option>
                        <option value="Cloud">Cloud</option>
                    </select>
                </div>
                @if (Option == "On-Prem")
                {
                    <div>
                        Your choice is On-Prem
                        @foreach (var question in Questions)
                        {
                            <div class="row mt-3">
                                <div class="col-md-4">
                                    <p>@question.Question</p>
                                </div>
                                <div class="col-md-4">
                                    @if (question.Type == QuestionType.Text)
                                    {
                                        <input type="text" @bind="question.TextAnswer" class="form-control" />
                                    }
                                    else if (question.Type == QuestionType.Dropdown)
                                    {
                                        <select @bind="question.TextAnswer" class="form-select">
                                            @foreach (var option in question.DropdownOptions)
                                            {
                                                <option value="@option">@option</option>
                                            }
                                        </select>
                                    }
                                </div>
                                <div class="col-md-4">
                                    <p>@question.Explanation</p>
                                </div>
                            </div>
                            @if (question.ChildQuestionsByAnswer.ContainsKey(question.TextAnswer))
                            {
                                <div class="card mt-3">
                                    <div class="card-body">
                                        @foreach (var childQuestion in question.ChildQuestionsByAnswer[question.TextAnswer])
                                        {
                                            <div class="row mt-3">
                                                <div class="col-md-4">
                                                    <p>@childQuestion.Question</p>
                                                </div>
                                                <div class="col-md-4">
                                                    @if (childQuestion.Type == QuestionType.Text)
                                                    {
                                                        <input type="text" @bind="childQuestion.TextAnswer" class="form-control" />
                                                    }
                                                    else if (childQuestion.Type == QuestionType.Dropdown)
                                                    {
                                                        <select @bind="childQuestion.TextAnswer" class="form-select">
                                                            @foreach (var option in childQuestion.DropdownOptions)
                                                            {
                                                                <option value="@option">@option</option>
                                                            }
                                                        </select>
                                                    }
                                                </div>
                                                <div class="col-md-4">
                                                    <p>@childQuestion.Explanation</p>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        }
                    </div>
                }
                else
                {
                    <div>
                        Your choice is Cloud
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private string Option { get; set; } = "On-Prem";
    private List<QuestionEntity> Questions { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var baseUri = NavigationManager.BaseUri;
            var jsonFile = Option == "On-Prem" ? "sdp-on-prem.json" : "sdp-cloud.json";
            var jsonUri = $"{baseUri}data/{jsonFile}";
            var json = await Http.GetStringAsync(jsonUri);
            Questions = JsonSerializer.Deserialize<List<QuestionEntity>>(json) ?? new();

            SetDropdownDefaults(Questions);

            // Load single instance questions if needed
            var instanceJson = await Http.GetStringAsync($"{baseUri}data/sdp-on-prem-esm-instance.json");
            var singleInstanceQuestions = JsonSerializer.Deserialize<List<QuestionEntity>>(instanceJson) ?? new();
            SetDropdownDefaults(singleInstanceQuestions);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    private void SetDropdownDefaults(List<QuestionEntity> questions)
    {
        foreach (var question in questions)
        {
            if (question.Type == QuestionType.Dropdown && string.IsNullOrEmpty(question.TextAnswer) && question.DropdownOptions.Count > 0)
            {
                question.TextAnswer = question.DropdownOptions[0];
            }

            if (question.ChildQuestionsByAnswer != null)
            {
                foreach (var childQuestions in question.ChildQuestionsByAnswer.Values)
                {
                    SetDropdownDefaults(childQuestions);
                }
            }
        }
    }
}